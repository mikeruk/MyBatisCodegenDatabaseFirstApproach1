plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.teleniasoftware.MybatisGenerator" version "3.0.0"
}

group = 'demo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.mybatis.generator:mybatis-generator-core:1.4.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}


mybatisGenerator {
    verbose = true
    configFile = file("src/main/resources/generatorConfig.xml")
}

task runMybatisGenerator(type: JavaExec) {
    main = 'org.mybatis.generator.api.ShellRunner'
    classpath = sourceSets.main.runtimeClasspath
    args = ['-configfile', "$projectDir/src/main/resources/generatorConfig.xml", '-overwrite']
}